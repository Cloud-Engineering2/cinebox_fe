name: cinebox With Github Actions

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:
      
jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: check version
        run: |
          npm -v
          node -v

      - name: set init package
        run: |
          rm -rf node_modules package-lock.json
          npm install

      - name: Make .env file
        run: |
          touch ./.env
          echo "${{ secrets.ENV }}" > ./.env
        shell: bash

      - name: Verify .env file
        run: cat ./.env
  
      - name: Build with npm
        run: |
          CI=false npm run build || { echo "Build failed!"; exit 1; }

      - name: Verify build output
        run: du -sh ./build

      - name: Check build folder
        run: ls ./build

      - uses: actions/upload-artifact@v4
        with:
          name: cinebox
          path: ./build
 
      - name: Configure AWS credentials 
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws configure set default.region ${{ secrets.AWS_REGION }}
          aws configure set output json
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Amazon ECR
        id: login-ecr
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          IMAGE_TAG: ${{ github.sha }}
          LATEST_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
          
          # latest 태그 생성
          docker tag $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$LATEST_TAG
         
          # 두 개의 태그 모두 푸시
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
          
          docker push $ECR_REGISTRY/${{ secrets.ECR_REPOSITORY }}:$LATEST_TAG


 
  # cd:
  #   needs: ci
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         repository: Cloud-Engineering2/project2-team4-manifest
  #         ref: main
  #         token: ${{ secrets.GIT_TOKEN }}

  #     - name: Set timestamp
  #       id: timestamp
  #       run: echo "date=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

  #     - name: Check ls
  #       run: |
  #         pwd
  #         ls -al          

  #     - name: Set up Image
  #       run: |
  #         sed -i 's|image: .*$|image: '"${{ secrets.ECRURL }}:${{ github.sha }}"'|g' ./manifestAWS/aws_deployment.yaml

  #     - name: Commit and push changes
  #       run: |
  #         git config --local user.email "${{ secrets.EMAIL }}"
  #         git config --local user.name "HIRedrain"
  #         git add .
          # git commit -m "Update image version to ${{ env.date }} - ${{ github.sha }}"
          # git push
